/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JobListingIndexRouteImport } from './routes/job-listing/index'
import { Route as CompanyIndexRouteImport } from './routes/company/index'
import { Route as ApplicantIndexRouteImport } from './routes/applicant/index'
import { Route as JobListingCreateRouteImport } from './routes/job-listing/create'
import { Route as CompanyCreateRouteImport } from './routes/company/create'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as ApplicantEditRouteImport } from './routes/applicant/edit'
import { Route as ApplicantApplicantIdRouteImport } from './routes/applicant/$applicantId'
import { Route as JobListingJobIdIndexRouteImport } from './routes/job-listing/$jobId/index'
import { Route as CompanyCompanyIdIndexRouteImport } from './routes/company/$companyId/index'
import { Route as JobListingJobIdUpdateRouteImport } from './routes/job-listing/$jobId/update'
import { Route as CompanyCompanyIdUpdateRouteImport } from './routes/company/$companyId/update'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobListingIndexRoute = JobListingIndexRouteImport.update({
  id: '/job-listing/',
  path: '/job-listing/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyIndexRoute = CompanyIndexRouteImport.update({
  id: '/company/',
  path: '/company/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicantIndexRoute = ApplicantIndexRouteImport.update({
  id: '/applicant/',
  path: '/applicant/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobListingCreateRoute = JobListingCreateRouteImport.update({
  id: '/job-listing/create',
  path: '/job-listing/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyCreateRoute = CompanyCreateRouteImport.update({
  id: '/company/create',
  path: '/company/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicantEditRoute = ApplicantEditRouteImport.update({
  id: '/applicant/edit',
  path: '/applicant/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicantApplicantIdRoute = ApplicantApplicantIdRouteImport.update({
  id: '/applicant/$applicantId',
  path: '/applicant/$applicantId',
  getParentRoute: () => rootRouteImport,
} as any)
const JobListingJobIdIndexRoute = JobListingJobIdIndexRouteImport.update({
  id: '/job-listing/$jobId/',
  path: '/job-listing/$jobId/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyCompanyIdIndexRoute = CompanyCompanyIdIndexRouteImport.update({
  id: '/company/$companyId/',
  path: '/company/$companyId/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobListingJobIdUpdateRoute = JobListingJobIdUpdateRouteImport.update({
  id: '/job-listing/$jobId/update',
  path: '/job-listing/$jobId/update',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyCompanyIdUpdateRoute = CompanyCompanyIdUpdateRouteImport.update({
  id: '/company/$companyId/update',
  path: '/company/$companyId/update',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/applicant/$applicantId': typeof ApplicantApplicantIdRoute
  '/applicant/edit': typeof ApplicantEditRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/company/create': typeof CompanyCreateRoute
  '/job-listing/create': typeof JobListingCreateRoute
  '/applicant': typeof ApplicantIndexRoute
  '/company': typeof CompanyIndexRoute
  '/job-listing': typeof JobListingIndexRoute
  '/company/$companyId/update': typeof CompanyCompanyIdUpdateRoute
  '/job-listing/$jobId/update': typeof JobListingJobIdUpdateRoute
  '/company/$companyId': typeof CompanyCompanyIdIndexRoute
  '/job-listing/$jobId': typeof JobListingJobIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/applicant/$applicantId': typeof ApplicantApplicantIdRoute
  '/applicant/edit': typeof ApplicantEditRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/company/create': typeof CompanyCreateRoute
  '/job-listing/create': typeof JobListingCreateRoute
  '/applicant': typeof ApplicantIndexRoute
  '/company': typeof CompanyIndexRoute
  '/job-listing': typeof JobListingIndexRoute
  '/company/$companyId/update': typeof CompanyCompanyIdUpdateRoute
  '/job-listing/$jobId/update': typeof JobListingJobIdUpdateRoute
  '/company/$companyId': typeof CompanyCompanyIdIndexRoute
  '/job-listing/$jobId': typeof JobListingJobIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/applicant/$applicantId': typeof ApplicantApplicantIdRoute
  '/applicant/edit': typeof ApplicantEditRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/company/create': typeof CompanyCreateRoute
  '/job-listing/create': typeof JobListingCreateRoute
  '/applicant/': typeof ApplicantIndexRoute
  '/company/': typeof CompanyIndexRoute
  '/job-listing/': typeof JobListingIndexRoute
  '/company/$companyId/update': typeof CompanyCompanyIdUpdateRoute
  '/job-listing/$jobId/update': typeof JobListingJobIdUpdateRoute
  '/company/$companyId/': typeof CompanyCompanyIdIndexRoute
  '/job-listing/$jobId/': typeof JobListingJobIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/applicant/$applicantId'
    | '/applicant/edit'
    | '/auth/login'
    | '/auth/sign-up'
    | '/company/create'
    | '/job-listing/create'
    | '/applicant'
    | '/company'
    | '/job-listing'
    | '/company/$companyId/update'
    | '/job-listing/$jobId/update'
    | '/company/$companyId'
    | '/job-listing/$jobId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/applicant/$applicantId'
    | '/applicant/edit'
    | '/auth/login'
    | '/auth/sign-up'
    | '/company/create'
    | '/job-listing/create'
    | '/applicant'
    | '/company'
    | '/job-listing'
    | '/company/$companyId/update'
    | '/job-listing/$jobId/update'
    | '/company/$companyId'
    | '/job-listing/$jobId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/applicant/$applicantId'
    | '/applicant/edit'
    | '/auth/login'
    | '/auth/sign-up'
    | '/company/create'
    | '/job-listing/create'
    | '/applicant/'
    | '/company/'
    | '/job-listing/'
    | '/company/$companyId/update'
    | '/job-listing/$jobId/update'
    | '/company/$companyId/'
    | '/job-listing/$jobId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  ApplicantApplicantIdRoute: typeof ApplicantApplicantIdRoute
  ApplicantEditRoute: typeof ApplicantEditRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  CompanyCreateRoute: typeof CompanyCreateRoute
  JobListingCreateRoute: typeof JobListingCreateRoute
  ApplicantIndexRoute: typeof ApplicantIndexRoute
  CompanyIndexRoute: typeof CompanyIndexRoute
  JobListingIndexRoute: typeof JobListingIndexRoute
  CompanyCompanyIdUpdateRoute: typeof CompanyCompanyIdUpdateRoute
  JobListingJobIdUpdateRoute: typeof JobListingJobIdUpdateRoute
  CompanyCompanyIdIndexRoute: typeof CompanyCompanyIdIndexRoute
  JobListingJobIdIndexRoute: typeof JobListingJobIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-listing/': {
      id: '/job-listing/'
      path: '/job-listing'
      fullPath: '/job-listing'
      preLoaderRoute: typeof JobListingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/': {
      id: '/company/'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applicant/': {
      id: '/applicant/'
      path: '/applicant'
      fullPath: '/applicant'
      preLoaderRoute: typeof ApplicantIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-listing/create': {
      id: '/job-listing/create'
      path: '/job-listing/create'
      fullPath: '/job-listing/create'
      preLoaderRoute: typeof JobListingCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/create': {
      id: '/company/create'
      path: '/company/create'
      fullPath: '/company/create'
      preLoaderRoute: typeof CompanyCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applicant/edit': {
      id: '/applicant/edit'
      path: '/applicant/edit'
      fullPath: '/applicant/edit'
      preLoaderRoute: typeof ApplicantEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applicant/$applicantId': {
      id: '/applicant/$applicantId'
      path: '/applicant/$applicantId'
      fullPath: '/applicant/$applicantId'
      preLoaderRoute: typeof ApplicantApplicantIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-listing/$jobId/': {
      id: '/job-listing/$jobId/'
      path: '/job-listing/$jobId'
      fullPath: '/job-listing/$jobId'
      preLoaderRoute: typeof JobListingJobIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/$companyId/': {
      id: '/company/$companyId/'
      path: '/company/$companyId'
      fullPath: '/company/$companyId'
      preLoaderRoute: typeof CompanyCompanyIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-listing/$jobId/update': {
      id: '/job-listing/$jobId/update'
      path: '/job-listing/$jobId/update'
      fullPath: '/job-listing/$jobId/update'
      preLoaderRoute: typeof JobListingJobIdUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/$companyId/update': {
      id: '/company/$companyId/update'
      path: '/company/$companyId/update'
      fullPath: '/company/$companyId/update'
      preLoaderRoute: typeof CompanyCompanyIdUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  ApplicantApplicantIdRoute: ApplicantApplicantIdRoute,
  ApplicantEditRoute: ApplicantEditRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  CompanyCreateRoute: CompanyCreateRoute,
  JobListingCreateRoute: JobListingCreateRoute,
  ApplicantIndexRoute: ApplicantIndexRoute,
  CompanyIndexRoute: CompanyIndexRoute,
  JobListingIndexRoute: JobListingIndexRoute,
  CompanyCompanyIdUpdateRoute: CompanyCompanyIdUpdateRoute,
  JobListingJobIdUpdateRoute: JobListingJobIdUpdateRoute,
  CompanyCompanyIdIndexRoute: CompanyCompanyIdIndexRoute,
  JobListingJobIdIndexRoute: JobListingJobIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
