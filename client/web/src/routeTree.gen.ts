/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ApplicantRouteImport } from './routes/applicant'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicantRoute = ApplicantRouteImport.update({
  id: '/applicant',
  path: '/applicant',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/applicant': typeof ApplicantRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/applicant': typeof ApplicantRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/applicant': typeof ApplicantRoute
  '/dashboard': typeof DashboardRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/applicant'
    | '/dashboard'
    | '/auth/login'
    | '/auth/sign-up'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/applicant'
    | '/dashboard'
    | '/auth/login'
    | '/auth/sign-up'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/applicant'
    | '/dashboard'
    | '/auth/login'
    | '/auth/sign-up'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApplicantRoute: typeof ApplicantRoute
  DashboardRoute: typeof DashboardRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applicant': {
      id: '/applicant'
      path: '/applicant'
      fullPath: '/applicant'
      preLoaderRoute: typeof ApplicantRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApplicantRoute: ApplicantRoute,
  DashboardRoute: DashboardRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
